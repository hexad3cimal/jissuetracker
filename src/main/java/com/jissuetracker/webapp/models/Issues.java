package com.jissuetracker.webapp.models;
// Generated 9 Feb, 2016 6:00:21 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Issues generated by hbm2java
 */
@Entity
@Table(name = "issues", catalog = "IssueTracker")
public class Issues implements java.io.Serializable {

	private Integer id;
	private Projects projects;
	private User userByCreatedById;
	private User userByAssignedToId;
	private Status status;
	private Trackers trackers;
	private Attachments attachments;
	private Date createdOn;
	private Date updatedOn;
	private Integer donePercentage;
	private String estimatedHours;
	private Date endDate;
	private String description;
	private Set<IssuesUpdates> issuesUpdateses = new HashSet<IssuesUpdates>(0);
	private Set<Attachments> attachmentses = new HashSet<Attachments>(0);

	public Issues() {
	}

	public Issues(Projects projects, User userByCreatedById, User userByAssignedToId, Status status, Trackers trackers,
			Attachments attachments, Date createdOn, Date updatedOn, Integer donePercentage, String estimatedHours,
			Date endDate, String description, Set<IssuesUpdates> issuesUpdateses, Set<Attachments> attachmentses) {
		this.projects = projects;
		this.userByCreatedById = userByCreatedById;
		this.userByAssignedToId = userByAssignedToId;
		this.status = status;
		this.trackers = trackers;
		this.attachments = attachments;
		this.createdOn = createdOn;
		this.updatedOn = updatedOn;
		this.donePercentage = donePercentage;
		this.estimatedHours = estimatedHours;
		this.endDate = endDate;
		this.description = description;
		this.issuesUpdateses = issuesUpdateses;
		this.attachmentses = attachmentses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "projectId")
	public Projects getProjects() {
		return this.projects;
	}

	public void setProjects(Projects projects) {
		this.projects = projects;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "createdById")
	public User getUserByCreatedById() {
		return this.userByCreatedById;
	}

	public void setUserByCreatedById(User userByCreatedById) {
		this.userByCreatedById = userByCreatedById;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "assignedToId")
	public User getUserByAssignedToId() {
		return this.userByAssignedToId;
	}

	public void setUserByAssignedToId(User userByAssignedToId) {
		this.userByAssignedToId = userByAssignedToId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "statusId")
	public Status getStatus() {
		return this.status;
	}

	public void setStatus(Status status) {
		this.status = status;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "trackerId")
	public Trackers getTrackers() {
		return this.trackers;
	}

	public void setTrackers(Trackers trackers) {
		this.trackers = trackers;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "attachmentId")
	public Attachments getAttachments() {
		return this.attachments;
	}

	public void setAttachments(Attachments attachments) {
		this.attachments = attachments;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createdOn", length = 19)
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updatedOn", length = 19)
	public Date getUpdatedOn() {
		return this.updatedOn;
	}

	public void setUpdatedOn(Date updatedOn) {
		this.updatedOn = updatedOn;
	}

	@Column(name = "donePercentage")
	public Integer getDonePercentage() {
		return this.donePercentage;
	}

	public void setDonePercentage(Integer donePercentage) {
		this.donePercentage = donePercentage;
	}

	@Column(name = "estimatedHours", length = 10)
	public String getEstimatedHours() {
		return this.estimatedHours;
	}

	public void setEstimatedHours(String estimatedHours) {
		this.estimatedHours = estimatedHours;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "endDate", length = 19)
	public Date getEndDate() {
		return this.endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "issues")
	public Set<IssuesUpdates> getIssuesUpdateses() {
		return this.issuesUpdateses;
	}

	public void setIssuesUpdateses(Set<IssuesUpdates> issuesUpdateses) {
		this.issuesUpdateses = issuesUpdateses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "issues")
	public Set<Attachments> getAttachmentses() {
		return this.attachmentses;
	}

	public void setAttachmentses(Set<Attachments> attachmentses) {
		this.attachmentses = attachmentses;
	}

}
