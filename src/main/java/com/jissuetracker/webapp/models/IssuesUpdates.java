package com.jissuetracker.webapp.models;
// Generated 16 Aug, 2016 4:24:53 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

/**
 * IssuesUpdates generated by hbm2java
 */
@Entity
@Table(name = "issuesUpdates", catalog = "IssueTracker")
public class IssuesUpdates extends SuperModelClass implements java.io.Serializable {

	private Integer id;
	private Issues issues;
	private User user;
	private String updates;
	private String updatedByUserFullName;
	private Set<Attachments> attachmentses = new HashSet<Attachments>(0);

	public IssuesUpdates() {
	}

	public IssuesUpdates(Issues issues, User user,  String updatedByUserFullName) {
		this.issues = issues;
		this.user = user;
		this.updatedByUserFullName = updatedByUserFullName;
	}

	public IssuesUpdates(Issues issues, User user, String updates,  String updatedByUserFullName,
						 Set<Attachments> attachmentses) {
		this.issues = issues;
		this.user = user;
		this.updates = updates;
		this.updatedByUserFullName = updatedByUserFullName;
		this.attachmentses = attachmentses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}



	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "issueId", nullable = false)
	public Issues getIssues() {
		return this.issues;
	}

	public void setIssues(Issues issues) {
		this.issues = issues;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "updatedBy", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "updates")
	public String getUpdates() {
		return this.updates;
	}

	public void setUpdates(String updates) {
		this.updates = updates;
	}


	@Column(name = "updatedByUserFullName", nullable = false)
	public String getUpdatedByUserFullName() {
		return this.updatedByUserFullName;
	}

	public void setUpdatedByUserFullName(String updatedByUserFullName) {
		this.updatedByUserFullName = updatedByUserFullName;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "issuesUpdates")
	public Set<Attachments> getAttachmentses() {
		return this.attachmentses;
	}

	public void setAttachmentses(Set<Attachments> attachmentses) {
		this.attachmentses = attachmentses;
	}

}
